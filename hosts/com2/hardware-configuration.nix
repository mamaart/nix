# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "ehci_pci" "xhci_pci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.supportedFilesystems = [ "btrfs" ];
  boot.initrd.postDeviceCommands = lib.mkAfter ''
    mkdir /mnt
    mount -t btrfs /dev/mapper/enc /mnt
    if [[ -e /mnt/root ]]; then
        mkdir -p /mnt/old_roots
	timestamp=$(date --date="@$(stat -c %Y /mnt/root)" "+%Y-%m-%-d+%H:%M:%S")
	mv /mnt/root "/mnt/old_roots/$timestamp"
    fi
    recdel_subvol() {
        IFS=$'\n'
        for x in $(btrfs subvolume list -o "$1" | cut -f 9- -d ' '); do
            recdel_subvol "/mnt/$x"
        done
    }
    for x in $(find /mnt/old_roots/ -maxdepth 1 -mtime +10); do
        recdel "$x"
    done
    btrfs subvolume create /mnt/root
    umount /mnt
  '';

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/7d9b1165-c0d0-4e0f-8661-a2c15792bef9";
      fsType = "btrfs";
      options = [ "subvol=root" "compress=zstd" "noatime" ];
    };

  boot.initrd.luks.devices."enc".device = "/dev/disk/by-uuid/54646aed-90e0-44dc-9e15-172a5013f40d";

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/7d9b1165-c0d0-4e0f-8661-a2c15792bef9";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" "noatime" ];
    };

  fileSystems."/persistent" =
    { device = "/dev/disk/by-uuid/7d9b1165-c0d0-4e0f-8661-a2c15792bef9";
      fsType = "btrfs";
      options = [ "subvol=persistent" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/7d9b1165-c0d0-4e0f-8661-a2c15792bef9";
      fsType = "btrfs";
      options = [ "subvol=log" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/12CE-A600";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
